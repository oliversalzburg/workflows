name: Publish

on:
  workflow_call:
    inputs:
      draft-only:
        default: false
        description: Should the GitHub Release only be created as a draft?
        required: false
        type: boolean
      has-mkdocs:
        default: false
        description: Does this project use mkdocs?
        required: false
        type: boolean
      has-github-pages:
        default: false
        description: Does this project produce a `_site` directory to be uploaded to GitHub Pages?
        required: false
        type: boolean
      is-canary:
        default: true
        description: Is this a preview release?
        required: false
        type: boolean
      publish-script:
        default: ""
        description: Shell code to run to prepare the package for publishing.
        required: false
        type: string
      registry-url:
        default: https://registry.npmjs.org
        description: npm package registry URL to publish to.
        required: false
        type: string
      wants-github-release:
        default: false
        description: Should we create a GitHub release?
        required: false
        type: boolean
    secrets:
      NPM_TOKEN:
        description: A personal access token to publish the package with.
        required: true

concurrency: publish

env:
  # renovate: datasource=node-version depName=node versioning=node
  NODE_VERSION: "22.10.0"

jobs:
  publish:
    name: Publish
    permissions:
      contents: write
      id-token: write
      packages: write
      pull-requests: read
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout
        uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4

      - name: Select NodeJS version
        uses: actions/setup-node@0a44ba7841725637a19e28fa30b79a866c81b0a6 # v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          registry-url: ${{ inputs.registry-url }}

      - name: Enable Corepack
        run: |
          corepack enable
          yarn config set enableGlobalCache false

      - name: Load cached dependencies
        uses: actions/cache@3624ceb22c1c5a301c8db4169662070a689d9ea8 # v4
        with:
          path: .yarn/cache
          key: ${{ runner.os }}-node${{ env.NODE_VERSION }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node${{ env.NODE_VERSION }}

      - name: Install dependencies
        run: yarn install

      - name: Set canary release version
        if: success() && inputs.is-canary
        run: |
          RELEASE_VERSION=$(yarn nextversion --canary=patch)
          echo "RELEASE_VERSION=$RELEASE_VERSION" | tee $GITHUB_ENV

      - name: Set release version
        if: success() && !inputs.is-canary
        run: |
          RELEASE_VERSION=$(yarn nextversion)
          echo "RELEASE_VERSION=$RELEASE_VERSION" | tee $GITHUB_ENV

      - name: Set package details
        run: |
          PACKAGE_NAME=$(jq --raw-output .name < package.json)
          echo "PACKAGE_NAME=$PACKAGE_NAME" | tee $GITHUB_ENV
          echo "PUBLISH_URL=https://www.npmjs.com/package/$PACKAGE_NAME/v/${{ env.RELEASE_VERSION }}" | tee $GITHUB_ENV

      - name: Publish package
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          ${{ inputs.publish-script }}
          npm --allow-same-version --ignore-scripts --no-git-tag-version version ${{ env.RELEASE_VERSION }}
          npm publish --access=public --provenance --tag=${{ inputs.is-canary && 'next' || 'latest' }}
          echo "Published npm package to <${{ env.PUBLISH_URL }}>" >> $GITHUB_STEP_SUMMARY

      - name: Upload GitHub Pages artifact
        if: inputs.has-github-pages
        uses: actions/upload-pages-artifact@56afc609e74202658d3ffba0e8f6dda462b719fa # v3

      - name: Generate SBOM
        if: success() && inputs.wants-github-release
        uses: anchore/sbom-action@1ca97d9028b51809cf6d3c934c3e160716e1b605 # v0
        with:
          format: spdx-json
          output-file: sbom.spdx.json
          upload-artifact: false
          upload-release-assets: false

      - name: Generate GitHub release
        if: success() && inputs.wants-github-release
        uses: oliversalzburg/action-automatic-semantic-releases@b71ef9d38dc33685ba2884a5bb6bce5a3037d3bf # v0.0.21
        with:
          automatic_release_tag: ${{ inputs.is-canary && 'next' || null }}
          body_prefix: |
            Published at <${{ env.PUBLISH_URL }}>.
          draft: ${{ inputs.draft-only }}
          files: sbom.spdx.json
          prerelease: ${{ inputs.is-canary }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          title: ${{ inputs.is-canary && 'Snapshot Build ' || '' }}v${{ env.RELEASE_VERSION }}

  publish-mkdocs:
    if: inputs.has-mkdocs && !inputs.is-canary
    name: ðŸ”¹ MkDocs
    uses: ./.github/workflows/frag-publish-mkdocs.yml

  publish-site:
    if: inputs.has-github-pages && !inputs.is-canary
    name: GitHub Pages
    needs: publish
    runs-on: ubuntu-24.04
    permissions:
      contents: read
      id-token: write
      pages: write
    steps:
      - name: Upload GitHub Pages artifact
        uses: actions/deploy-pages@d6db90164ac5ed86f2b6aed7e0febac5b3c0c03e # v4
