name: Publish

on:
  workflow_call:
    inputs:
      draft-only:
        default: false
        description: Should the GitHub Release only be created as a draft?
        required: false
        type: boolean
      has-mkdocs:
        default: false
        description: Does this project use mkdocs?
        required: false
        type: boolean
      has-github-pages:
        default: false
        description: Does this project produce a `_site` directory to be uploaded to GitHub Pages?
        required: false
        type: boolean
      is-canary:
        default: true
        description: Is this a development build?
        required: false
        type: boolean
      is-nightly:
        default: false
        description: Is this a scheduled build?
        required: false
        type: boolean
      output-path:
        default: output/*
        description: A file, directory or wildcard pattern that describes the location of build output.
        required: false
        type: string
      publish-documentation:
        default: false
        description: Update the documentation website?
        required: false
        type: boolean
      publish-github-release:
        default: false
        description: Create a GitHub release?
        required: false
        type: boolean
      publish-script:
        default: make
        description: Shell code to run to prepare the package for publishing.
        required: false
        type: string
      registry-url:
        default: https://registry.npmjs.org
        description: npm package registry URL to publish to.
        required: false
        type: string
      release-tag:
        description: Floating release tag to use.
        type: string
        required: true
    secrets:
      NPM_TOKEN:
        description: A personal access token to publish the package with.
        required: true

concurrency: publish

env:
  # renovate: datasource=node-version depName=node versioning=node
  NODE_VERSION: "23.11.1"

jobs:
  changelog:
    name: ðŸ”¹ Changelog
    uses: ./.github/workflows/frag-changelog.yml
    with:
      automatic-release-tag: ${{ ( inputs.is-canary || inputs.is-nightly ) && inputs.release-tag || '' }}

  publish-npm:
    name: npm package
    needs:
      - changelog
    uses: ./.github/workflows/frag-publish-npm.yml
    with:
      dist-tag: ${{ inputs.release-tag }}
      publish-script: ${{ inputs.publish-script }}
      registry-url: ${{ inputs.registry-url }}
      version: ${{ ( inputs.is-nightly && needs.changelog.outputs.version-patch-extended-nightly ) || ( inputs.is-canary && needs.changelog.outputs.version-patch-extended-dev ) || needs.changelog.outputs.version-current }}
    secrets:
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

  publish-mkdocs:
    if: inputs.publish-documentation && inputs.has-mkdocs
    name: ðŸ”¹ MkDocs
    needs:
      - publish-npm
    uses: ./.github/workflows/frag-publish-mkdocs.yml

  publish-github-pages:
    if: inputs.publish-documentation && inputs.has-github-pages
    name: GitHub Pages
    needs:
      - publish-npm
    outputs:
      publish-url: ${{ steps.deploy.outputs.page_url }}
    permissions:
      contents: read
      id-token: write
      pages: write
    runs-on: ubuntu-24.04
    steps:
      - id: deploy
        name: Upload GitHub Pages artifact
        uses: actions/deploy-pages@d6db90164ac5ed86f2b6aed7e0febac5b3c0c03e # v4

  publish-github-release:
    if: |
      always()
      && contains(needs.*.result, 'success')
      && !contains(needs.*.result, 'failure')
      && inputs.publish-github-release
    name: GitHub Release
    needs:
      - changelog
      - publish-github-pages
      - publish-npm
    permissions:
      contents: write
    runs-on: ubuntu-24.04
    steps:
      - name: Download changelog
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5
        with:
          name: changelog.json

      - name: Generate GitHub release
        uses: oliversalzburg/action-automatic-semantic-releases@85df1a5f81e6a18f5bb88eb495198b27399066dc # v2.0.0
        with:
          automatic-release-tag: ${{ ( inputs.is-canary || inputs.is-nightly ) && inputs.release-tag || '' }}
          body-suffix: |

            ---
            - Release generated by <${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}>
            ${{ needs.publish-npm.outputs.publish-url && format('- npm package published at <{0}>', needs.publish-npm.outputs.publish-url) }}
            ${{ needs.publish-documentation.outputs.publish-url && format('- Documentation published at <{0}>', needs.publish-documentation.outputs.publish-url) }}
          changelog-artifact: changelog.json
          draft: ${{ inputs.draft-only }}
          dry-run: false
          merge-similar: true
          prerelease: ${{ inputs.is-canary || inputs.is-nightly }}
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          title: >-
            ${{
              ( inputs.is-nightly && 'Nightly Build ' ) ||
              ( inputs.is-canary && 'Development Build ' ) ||
              ''
            }}v${{
              ( inputs.is-nightly && needs.changelog.outputs.version-patch-extended-nightly ) ||
              ( inputs.is-canary && needs.changelog.outputs.version-patch-extended-dev ) ||
              needs.changelog.outputs.version-current
            }}
          with-authors: false
