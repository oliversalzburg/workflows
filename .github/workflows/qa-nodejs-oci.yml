name: QA

on:
  workflow_call:
    inputs:
      artifact-contents:
        default: ""
        description: List of paths to put into the `build-output` artifact.
        required: false
        type: string
      artifact-name:
        default: build-output
        description: "The name that should be assigned to the build output artifact."
        required: false
        type: string
      containerfile:
        default: "Dockerfile"
        description: "The name of the container image manifest. Relative to the `context`."
        required: false
        type: string
      context:
        default: "."
        description: "The container image build context working-directory."
        required: false
        type: string
      working-directory:
        default: "."
        description: Where is the `package.json` file located?
        required: false
        type: string

env:
  # renovate: datasource=node-version depName=node versioning=node
  NODE_VERSION: "22.9.0"

jobs:
  qa:
    name: Run QA
    permissions:
      contents: read
      packages: read
    runs-on: ubuntu-24.04
    
    steps:
      - name: Checkout
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4

      - name: Select NodeJS version
        uses: actions/setup-node@0a44ba7841725637a19e28fa30b79a866c81b0a6 # v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Enable Corepack
        run: |
          corepack enable
          yarn config set enableGlobalCache false

      - name: Load cached dependencies
        uses: actions/cache@2cdf405574d6ef1f33a1d12acccd3ae82f47b3f2 # v4
        with:
          path: .yarn/cache
          key: ${{ runner.os }}-node${{ matrix.node-version }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node${{ matrix.node-version }}

      - name: Install dependencies
        run: yarn install
        working-directory: ${{ inputs.working-directory }}

      - name: Build
        run: yarn build
        working-directory: ${{ inputs.working-directory }}
      - name: Lint
        run: yarn lint
        working-directory: ${{ inputs.working-directory }}
      - name: Test
        run: yarn test
        working-directory: ${{ inputs.working-directory }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@c47758b77c9736f4b2ef4073d4d51994fabfe349 # v3

      - name: Build
        env:
          DOCKER_BUILD_RECORD_UPLOAD: false
          DOCKER_BUILD_SUMMARY: false
          SOURCE_DATE_EPOCH: 0
        uses: docker/build-push-action@4f58ea79222b3b9dc2c8bbdd6debcef730109a75 # v6
        with:
          cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ github.repository }}/cache
          context: ${{ inputs.context }}
          file: ${{ inputs.context }}/${{ inputs.containerfile }}
          platforms: linux/amd64
          provenance: false
          push: false

      - if: inputs.artifact-contents != ''
        uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874 # v4
        with:
          name: ${{ inputs.artifact-name }}
          path: ${{ inputs.artifact-contents }}
          retention-days: 1
