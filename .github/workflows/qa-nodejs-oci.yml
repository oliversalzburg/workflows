name: QA

on:
  workflow_call:
    inputs:
      artifact-contents:
        default: ""
        description: List of paths to put into the `build-output` artifact.
        required: false
        type: string
      artifact-name:
        default: build-output
        description: "The name that should be assigned to the build output artifact."
        required: false
        type: string
      containerfile:
        default: "Dockerfile"
        description: "The name of the container image manifest. Relative to the `context`."
        required: false
        type: string
      context:
        default: "."
        description: "The container image build context working-directory."
        required: false
        type: string
      registry:
        default: ghcr.io
        description: Which registry should we use?
        required: false
        type: string
      working-directory:
        default: "."
        description: Where is the `package.json` file located?
        required: false
        type: string

env:
  # renovate: datasource=node-version depName=node versioning=node
  NODE_VERSION: "23.10.0"

jobs:
  qa:
    name: Node.js OCI
    permissions:
      contents: read
      packages: read
    runs-on: ubuntu-24.04
    
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          persist-credentials: false

      - name: Select Node.js version
        uses: actions/setup-node@1d0ff469b7ec7b3cb9d8673fde0c81c44821de2a # v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Enable Corepack
        run: |
          corepack enable
          yarn config set enableGlobalCache false

      - name: Load cached dependencies
        uses: actions/cache@d4323d4df104b026a6aa633fdb11d772146be0bf # v4
        with:
          path: .yarn/cache
          key: ${{ runner.os }}-node${{ env.NODE_VERSION }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node${{ env.NODE_VERSION }}

      - name: Build, lint, test
        run: |
          make lint
          make build test
        working-directory: ${{ inputs.working-directory }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3

      - name: Build
        env:
          DOCKER_BUILD_RECORD_UPLOAD: false
          DOCKER_BUILD_SUMMARY: false
          SOURCE_DATE_EPOCH: 0
        uses: docker/build-push-action@471d1dc4e07e5cdedd4c2171150001c434f0b7a4 # v6
        with:
          cache-from: type=registry,ref=${{ inputs.registry }}/${{ github.repository }}/cache
          context: ${{ inputs.context }}
          file: ${{ inputs.context }}/${{ inputs.containerfile }}
          platforms: linux/amd64
          provenance: false
          push: false

      - if: inputs.artifact-contents != ''
        uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # v4
        with:
          name: ${{ inputs.artifact-name }}
          path: ${{ inputs.artifact-contents }}
          retention-days: 1
